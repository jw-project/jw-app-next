"use server";

import type { Metadata } from "next";
import "~/styles/global.css";
import { Body } from "~/components/body/body";
import type { PropsWithChildren } from "react";
import { LanguageProvider } from "~/global-context/translation";
import { getTranslateResources } from "~/utils/i18n.server";
import { headers } from "next/headers";

export async function generateMetadata(): Promise<Metadata> {
  return {
    title: "Create Next App",
    description: "Generated by create next app",
  };
}

export default async function RootLayout({ children }: PropsWithChildren) {
  // let resources = cacheConfigs.get<Translations>('resources');
  // if (!resources) {
  const resources = await getTranslateResources();
  const language = headers().get("accept-language")?.split(",")[0] || "en";
  // cacheConfigs.set('resources', resources);
  // }

  return (
    <LanguageProvider translations={resources} defaultLanguage={language}>
      <Body>{children}</Body>
    </LanguageProvider>
  );
}
